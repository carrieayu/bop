name: Deployment

on:
  push:
    branches: ["main"]

jobs:
  client-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run Build
        run: |
          npm install
          if [ ! -d "./build" ]; then
            CI=false npm run build
          fi
      - name: Check if build directory is empty
        run: |
          if [ "$(ls -A build)" ]; then
            echo "Build directory is not empty"
          else
            echo "Build directory is empty. Exiting deployment."
            exit 1
          fi

      - name: Copy build files view SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ec2-54-178-202-58.ap-northeast-1.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/*"
          target: "/home/ec2-user/build/"
          strip_components: 2
    #   - name: Copy build files via SSH
    #     uses: appleboy/ssh-action@master # Consider a more recent version
    #     with:
    #       host: ec2-54-178-202-58.ap-northeast-1.compute.amazonaws.com
    #       username: ec2-user
    #       key: ${{ secrets.SSH_PRIVATE_PEM_KEY }}
    #       port: 22 # Optional if using default port
    #       script: |
    #         mkdir -p /home/ec2-user/build
    #         rsync -avz --delete ${GITHUB_WORKSPACE}/build/ /home/ec2-user/build/
    #         # Use rsync for efficient transfer and overwrite handling

    #   - name: Check EC2 Instance Directory (optional)
    #     run: |
    #       ssh -i ${{ secrets.SSH_PRIVATE_PEM_KEY }} ec2-user@ec2-54-178-202-58.ap-northeast-1.compute.amazonaws.com ls -al /home/ec2-user/build
